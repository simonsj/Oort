{"author":"Rich Lane","name":"demo2","description":"Space Invaders","initial_view_scale":32,"teams":[{"name":"green","color":{"b":0,"g":255,"r":0},"ships":[{"class":"carrier","x":0,"y":800}],"code":"local my_class = class\nlocal my_ship = ships[my_class]\n\nif class == \"carrier\" then\n\tlocal main_target = nil\n\tlocal dest = nil\n\twhile true do\n\t\tif not main_target then\n\t\t\tlocal x, y = position()\n\t\t\tlocal vx, vy = velocity()\n\t\t\tmain_target = pick_close_enemy(x, y, my_ship.guns.main.velocity*my_ship.guns.main.ttl, 0.5)\n\t\telse\n\t\t\tmain_target = sensor_contact(main_target:id())\n\t\tend\n\n\t\tif main_target then\n\t\t\tlocal x, y = position()\n\t\t\tlocal vx, vy = velocity()\n\t\t\tlocal tx, ty = main_target:position()\n\t\t\tlocal tvx, tvy = main_target:velocity()\n\t\t\tlocal a2 = lead(x, y, tx, ty, vx, vy, tvx, tvy, my_ship.guns.main.velocity, my_ship.guns.main.ttl)\n\t\t\tif a2 then\n\t\t\t\tfire(\"main\", a2)\n\t\t\telse\n\t\t\t\tmain_target = nil\n\t\t\tend\n\t\tend\n\n\t\tif dest then\n\t\t\tlocal x,y = position()\n\t\t\tlocal dx = dest_half - x\n\t\t\tif dx > 0 then thrust(0, 4)\n\t\t\telse thrust(0, -4) end\n\t\t\tlocal vx,vy = velocity()\n\t\t\tif math.abs(x-dest) < 1 and vx < 0.1 then\n\t\t\t\tdest = nil\n\t\t\t\tthrust(0,0)\n\t\t\tend\n\t\telse\n\t\t\tdest = math.random(40) - 20\n\t\t\tlocal x,y = position()\n\t\t\tlocal dx = dest - x\n\t\t\tdest_half = x + dx/2\n\t\tend\n\n\t\tyield()\n\tend\nelseif class == \"fighter\" then\n\tlocal epsilon = 0.001\n\n\tfunction assert_stopped()\n\t\tvx,vy = velocity()\n\t\tassert(math.abs(vx) < epsilon)\n\t\tassert(math.abs(vy) < epsilon)\n\tend\n\n\tfunction assert_stopped_y()\n\t\tvx,vy = velocity()\n\t\tassert(math.abs(vy) < epsilon)\n\tend\n\n\tlocal acc = 4\n\tlocal down_acc = 3\n\tlocal thrust_time = 32\n\tlocal down_thrust_time = 48\n\tlocal sleep_time = 256\n\tassert_stopped()\n\tthrust(0,-acc/2)\n\tsleep(thrust_time)\n\tthrust(0,0)\n\tsleep(sleep_time/2)\n\twhile true do\n\t\tassert_stopped_y()\n\t\tthrust(0,acc)\n\t\tsleep(thrust_time/2)\n\t\tassert_stopped()\n\t\tthrust(math.pi/2, down_acc)\n\t\tsleep(down_thrust_time/2)\n\t\tthrust(math.pi/2, -down_acc)\n\t\tsleep(down_thrust_time/2)\n\t\tassert_stopped()\n\t\tlocal x,y = position()\n\t\tif y > 8 then break end\n\t\tthrust(0,acc)\n\t\tsleep(thrust_time/2)\n\t\tassert_stopped_y()\n\t\tthrust(0,0)\n\t\tsleep(sleep_time)\n\t\tassert_stopped_y()\n\t\tacc = -acc\n\tend\n\n\tlocal t = sensor_contacts{enemy=true, class=\"carrier\"}[1]\n\twhile true do\n\t\tt = sensor_contact(t:id())\n\t\tlocal x,y = position()\n\t\tlocal tx,ty = t:position()\n\t\tlocal a = angle_between(x,y,tx,ty)\n\t\tthrust(a, 4)\n\t\tif distance(x,y,tx,ty) < 3 then\n\t\t\texplode()\n\t\tend\n\tend\nend\n"},{"name":"blue","color":{"b":255,"g":0,"r":0},"ships":[{"class":"fighter","x":-1200,"y":-800},{"class":"fighter","x":-800,"y":-800},{"class":"fighter","x":-400,"y":-800},{"class":"fighter","x":0,"y":-800},{"class":"fighter","x":400,"y":-800},{"class":"fighter","x":800,"y":-800},{"class":"fighter","x":1200,"y":-800},{"class":"fighter","x":-1200,"y":-560},{"class":"fighter","x":-800,"y":-560},{"class":"fighter","x":-400,"y":-560},{"class":"fighter","x":0,"y":-560},{"class":"fighter","x":400,"y":-560},{"class":"fighter","x":800,"y":-560},{"class":"fighter","x":1200,"y":-560},{"class":"fighter","x":-1200,"y":-320},{"class":"fighter","x":-800,"y":-320},{"class":"fighter","x":-400,"y":-320},{"class":"fighter","x":0,"y":-320},{"class":"fighter","x":400,"y":-320},{"class":"fighter","x":800,"y":-320},{"class":"fighter","x":1200,"y":-320}],"code":"local my_class = class\nlocal my_ship = ships[my_class]\n\nif class == \"carrier\" then\n\tlocal main_target = nil\n\tlocal dest = nil\n\twhile true do\n\t\tif not main_target then\n\t\t\tlocal x, y = position()\n\t\t\tlocal vx, vy = velocity()\n\t\t\tmain_target = pick_close_enemy(x, y, my_ship.guns.main.velocity*my_ship.guns.main.ttl, 0.5)\n\t\telse\n\t\t\tmain_target = sensor_contact(main_target:id())\n\t\tend\n\n\t\tif main_target then\n\t\t\tlocal x, y = position()\n\t\t\tlocal vx, vy = velocity()\n\t\t\tlocal tx, ty = main_target:position()\n\t\t\tlocal tvx, tvy = main_target:velocity()\n\t\t\tlocal a2 = lead(x, y, tx, ty, vx, vy, tvx, tvy, my_ship.guns.main.velocity, my_ship.guns.main.ttl)\n\t\t\tif a2 then\n\t\t\t\tfire(\"main\", a2)\n\t\t\telse\n\t\t\t\tmain_target = nil\n\t\t\tend\n\t\tend\n\n\t\tif dest then\n\t\t\tlocal x,y = position()\n\t\t\tlocal dx = dest_half - x\n\t\t\tif dx > 0 then thrust(0, 4)\n\t\t\telse thrust(0, -4) end\n\t\t\tlocal vx,vy = velocity()\n\t\t\tif math.abs(x-dest) < 1 and vx < 0.1 then\n\t\t\t\tdest = nil\n\t\t\t\tthrust(0,0)\n\t\t\tend\n\t\telse\n\t\t\tdest = math.random(40) - 20\n\t\t\tlocal x,y = position()\n\t\t\tlocal dx = dest - x\n\t\t\tdest_half = x + dx/2\n\t\tend\n\n\t\tyield()\n\tend\nelseif class == \"fighter\" then\n\tlocal epsilon = 0.001\n\n\tfunction assert_stopped()\n\t\tvx,vy = velocity()\n\t\tassert(math.abs(vx) < epsilon)\n\t\tassert(math.abs(vy) < epsilon)\n\tend\n\n\tfunction assert_stopped_y()\n\t\tvx,vy = velocity()\n\t\tassert(math.abs(vy) < epsilon)\n\tend\n\n\tlocal acc = 4\n\tlocal down_acc = 3\n\tlocal thrust_time = 32\n\tlocal down_thrust_time = 48\n\tlocal sleep_time = 256\n\tassert_stopped()\n\tthrust(0,-acc/2)\n\tsleep(thrust_time)\n\tthrust(0,0)\n\tsleep(sleep_time/2)\n\twhile true do\n\t\tassert_stopped_y()\n\t\tthrust(0,acc)\n\t\tsleep(thrust_time/2)\n\t\tassert_stopped()\n\t\tthrust(math.pi/2, down_acc)\n\t\tsleep(down_thrust_time/2)\n\t\tthrust(math.pi/2, -down_acc)\n\t\tsleep(down_thrust_time/2)\n\t\tassert_stopped()\n\t\tlocal x,y = position()\n\t\tif y > 8 then break end\n\t\tthrust(0,acc)\n\t\tsleep(thrust_time/2)\n\t\tassert_stopped_y()\n\t\tthrust(0,0)\n\t\tsleep(sleep_time)\n\t\tassert_stopped_y()\n\t\tacc = -acc\n\tend\n\n\tlocal t = sensor_contacts{enemy=true, class=\"carrier\"}[1]\n\twhile true do\n\t\tt = sensor_contact(t:id())\n\t\tlocal x,y = position()\n\t\tlocal tx,ty = t:position()\n\t\tlocal a = angle_between(x,y,tx,ty)\n\t\tthrust(a, 4)\n\t\tif distance(x,y,tx,ty) < 3 then\n\t\t\texplode()\n\t\tend\n\tend\nend\n"}],"radius":5000}